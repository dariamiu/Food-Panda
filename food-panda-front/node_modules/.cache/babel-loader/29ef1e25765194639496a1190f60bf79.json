{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daria\\\\Desktop\\\\AN3\\\\Sem 2\\\\SD\\\\food-panda-front\\\\src\\\\components\\\\CreateRestaurant.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport Zone from \"./Zone\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateRestaurantView = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [location, setLocationR] = useState('');\n  const {\n    state\n  } = useLocation();\n  const [zones, setZones] = useState([]);\n  const [deliveryZones, setDeliveryZones] = useState([]);\n  const adminName = state.admin;\n  const navigate = useNavigate();\n  const [restaurant, setRestaurant] = useState('');\n\n  const fetchZones = async () => {\n    const res = await fetch(`http://localhost:8080/foodpanda/zones`);\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchRestaurant = async adminName => {\n    const res = await fetch(`http://localhost:8080/foodpanda/restaurant/${adminName}`);\n    const data = await res.json();\n    return data;\n  };\n\n  useEffect(() => {\n    const getZones = async () => {\n      const zonesLocal = await fetchZones();\n      setZones(zonesLocal);\n    };\n\n    getZones();\n\n    const getRestaurant = async adminName => {\n      const restaurantLocal = await fetchRestaurant(adminName);\n      setRestaurant(restaurantLocal);\n    };\n\n    getRestaurant(adminName);\n    console.log(restaurant.name);\n  }, []);\n\n  const onClickSave = async () => {\n    var checkboxes = document.querySelectorAll('input[type=checkbox]:checked');\n\n    for (var i = 0; i < checkboxes.length; i++) {\n      deliveryZones.push(checkboxes[i].value);\n    }\n\n    console.log(adminName);\n    console.log(name);\n    console.log(location);\n    console.log(deliveryZones);\n    const data = {\n      name: name,\n      location: location,\n      deliveryZones: deliveryZones,\n      adminName: adminName\n    };\n    const res = await fetch(`http://localhost:8080/foodpanda/restaurants/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).catch(error => {\n      return error.response;\n    });\n    alert(res.message);\n\n    if (res.success) {\n      navigate('/admin/initial-view', {\n        state: {\n          admin: adminName\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerWithBorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"coloredLoginTitle\",\n      children: \"Create Restaurant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Restaurant Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Location \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Address\",\n          value: location,\n          onChange: e => setLocationR(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Zones \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: zones.map((z, index) => /*#__PURE__*/_jsxDEV(Zone, {\n            zone: z\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => onClickSave(e),\n        class: \"btn btn-primary btn-block\",\n        type: \"submit\",\n        children: \"Create \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateRestaurantView, \"kMC42AiqPVpN+3guLACJ2a2ZLlc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = CreateRestaurantView;\nexport default CreateRestaurantView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRestaurantView\");","map":{"version":3,"sources":["C:/Users/Daria/Desktop/AN3/Sem 2/SD/food-panda-front/src/components/CreateRestaurant.js"],"names":["useState","useEffect","useLocation","Zone","useNavigate","CreateRestaurantView","name","setName","location","setLocationR","state","zones","setZones","deliveryZones","setDeliveryZones","adminName","admin","navigate","restaurant","setRestaurant","fetchZones","res","fetch","data","json","fetchRestaurant","getZones","zonesLocal","getRestaurant","restaurantLocal","console","log","onClickSave","checkboxes","document","querySelectorAll","i","length","push","value","method","headers","body","JSON","stringify","then","response","catch","error","alert","message","success","e","target","map","z","index"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useLocation } from \"react-router-dom\"\r\nimport Zone from \"./Zone\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nconst CreateRestaurantView = () => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [location, setLocationR] = useState('')\r\n    const {state} = useLocation()\r\n    const [zones, setZones] = useState([])\r\n    const [deliveryZones,setDeliveryZones] = useState([])\r\n    const adminName = state.admin\r\n    const navigate = useNavigate()\r\n    const [restaurant, setRestaurant] = useState('') \r\n\r\n\r\n    const fetchZones = async() => {\r\n        const res = await fetch(`http://localhost:8080/foodpanda/zones`)\r\n        const data = await res.json()\r\n        return data;\r\n    }\r\n\r\n    const fetchRestaurant = async(adminName)=> {\r\n        const res = await fetch(`http://localhost:8080/foodpanda/restaurant/${adminName}`)\r\n        const data = await res.json()\r\n        return data; \r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        const getZones = async () => {\r\n            const zonesLocal = await fetchZones()\r\n            setZones(zonesLocal)\r\n        }\r\n        getZones()\r\n\r\n        const getRestaurant = async(adminName) => {\r\n            const restaurantLocal = await fetchRestaurant(adminName)\r\n            setRestaurant(restaurantLocal)\r\n        }\r\n        getRestaurant(adminName)\r\n        console.log(restaurant.name)\r\n        \r\n    }, [])\r\n\r\n\r\n    const onClickSave = async() =>{\r\n        \r\n        var checkboxes = document.querySelectorAll('input[type=checkbox]:checked')\r\n        for (var i = 0; i < checkboxes.length; i++) {\r\n            deliveryZones.push(checkboxes[i].value)\r\n        }\r\n\r\n        console.log(adminName)\r\n        console.log(name);\r\n        console.log(location);\r\n        console.log(deliveryZones);\r\n\r\n        const data = {\r\n            name : name,\r\n            location : location,\r\n            deliveryZones : deliveryZones,\r\n            adminName : adminName\r\n        }\r\n\r\n        const res = await fetch(`http://localhost:8080/foodpanda/restaurants/add`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n\t\t.then(response => response.json())\r\n\t\t.catch(error=>{ return error.response; })\r\n\t\talert(res.message)\r\n\r\n        if(res.success){\r\n            navigate('/admin/initial-view', {\r\n                state: {\r\n                    admin : adminName\r\n                }\r\n            }) \r\n        }\r\n    \r\n    }\r\n\r\n    \r\n    return(\r\n        <div className='containerWithBorder'>\r\n\t\t<h1 className='coloredLoginTitle'>Create Restaurant</h1>\r\n\t\t<form className=\"add-form\">\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label> Restaurant Name </label>\r\n\t\t\t\t<input  type=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Enter name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label> Location </label>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Enter Address\" value={location} onChange={(e) => setLocationR(e.target.value)}/>\r\n\t\t\t</div>\r\n            <div>\r\n\t\t\t\t<label> Zones </label>\r\n                <form >\r\n                    {zones.map((z,index) => (\r\n                        <Zone key={index} zone = {z}/>\r\n                    ))}\r\n                </form>\r\n\t\t\t</div>\r\n\r\n\t\t\t</form>\r\n      \r\n\t\t\t\t<div>\r\n\t\t\t\t\r\n\t\t      \t<button onClick={(e) => onClickSave(e)} class=\"btn btn-primary btn-block\" type=\"submit\">Create </button>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n      </div>\r\n        \r\n\r\n    )\r\n};\r\n\r\nexport default CreateRestaurantView"]},"metadata":{},"sourceType":"module"}